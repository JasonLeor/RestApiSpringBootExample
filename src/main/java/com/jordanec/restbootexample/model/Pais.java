package com.jordanec.restbootexample.model;
// Generated 04-ene-2016 19:14:02 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import com.jordanec.restbootexample.util.*;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.base.Objects;

/**
 * Pais generated by hbm2java
 */

@JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property="_idPais", scope=Pais.class)
@Entity
@Table(name = "Pais", catalog = "FutbolDB_V2", uniqueConstraints = { @UniqueConstraint(columnNames = "nombre"),
		@UniqueConstraint(columnNames = "puestoRankingFifa") })
//@JsonIgnoreProperties({"equipos", "jugadores"} ) //"confederacion"	//ignoreUnknown=true
//@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
//@JsonDeserialize(using=PaisJsonDeserializer.class)
//@JsonSerialize(using=PaisJsonSerializer.class)
public class Pais implements java.io.Serializable {

	/**
	 * 
	 */
	@JsonIgnore
	private static final long serialVersionUID = 5025413079710980593L;
	private Integer idPais;
	//@JsonManagedReference(value="confederacionPais")
	private Confederacion confederacion;
	private String nombre;
	private int puestoRankingFifa;
	//@JsonBackReference(value="paisEquipo")
	private Set<Equipo> equipos = new HashSet<Equipo>(0);
	//@JsonBackReference(value="paisJugador")
	private Set<Jugador> jugadores = new HashSet<Jugador>(0);

	public Pais() {}

	public Pais(Confederacion confederacion, String nombre, int puestoRankingFifa) {
		this.confederacion = confederacion;
		this.nombre = nombre;
		this.puestoRankingFifa = puestoRankingFifa;
	}
	
	public Pais(Integer idPais, Confederacion confederacion, String nombre, int puestoRankingFifa, Set<Equipo> equipos,
			Set<Jugador> jugadores) {
		super();
		this.idPais = idPais;
		this.confederacion = confederacion;
		this.nombre = nombre;
		this.puestoRankingFifa = puestoRankingFifa;
		this.equipos = equipos;
		this.jugadores = jugadores;
	}

	public Pais(int idPais, Confederacion confederacion, String nombre, int puestoRankingFifa) {
		this.idPais = idPais;
		this.confederacion = confederacion;
		this.nombre = nombre;
		this.puestoRankingFifa = puestoRankingFifa;
	}

	public Pais(Confederacion confederacion, String nombre, int puestoRankingFifa, Set<Equipo> equipos,
			Set<Jugador> jugadores) {
		this.confederacion = confederacion;
		this.nombre = nombre;
		this.puestoRankingFifa = puestoRankingFifa;
		this.equipos = equipos;
		this.jugadores = jugadores;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idPais", unique = true, nullable = false)
	public Integer getIdPais() {
		return this.idPais;
	}

	public void setIdPais(Integer idPais) {
		this.idPais = idPais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idConfederacion", nullable = false)
	public Confederacion getConfederacion() {
		return this.confederacion;
	}

	public void setConfederacion(Confederacion confederacion) {
		this.confederacion = confederacion;
	}

	@Column(name = "nombre", unique = true, nullable = false, length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "puestoRankingFifa", unique = true, nullable = false)
	public int getPuestoRankingFifa() {
		return this.puestoRankingFifa;
	}

	public void setPuestoRankingFifa(int puestoRankingFifa) {
		this.puestoRankingFifa = puestoRankingFifa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pais")
	public Set<Equipo> getEquipos() {
		return this.equipos;
	}

	public void setEquipos(Set<Equipo> equipos) {
		this.equipos = equipos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pais")
	public Set<Jugador> getJugadores() {
		return this.jugadores;
	}

	public void setJugadores(Set<Jugador> jugadores) {
		this.jugadores = jugadores;
	}
	
	@Override
	public String toString() {
		return " {\"idPais\":" + idPais + ",\"nombre\":\"" + nombre
				+ "\",\"puestoRankingFifa\":" + puestoRankingFifa + "}";
	}
	
	@Override
	public int hashCode() {
		return Objects.hashCode(getNombre(), getPuestoRankingFifa(), getConfederacion(), getEquipos(),
				getJugadores());
	}

	@Override
	public boolean equals(Object object) {
		if(object instanceof Pais) {
			Pais other = (Pais)object;
			return Objects.equal(getNombre(), other.getNombre())
				&& Objects.equal(getPuestoRankingFifa(), other.getPuestoRankingFifa())
				&& Objects.equal(getConfederacion(), other.getConfederacion())
				&& Objects.equal(getEquipos(), other.getEquipos())
				&& Objects.equal(getJugadores(), other.getJugadores());
		}
		else
			return false;
	}
	
	
	
}